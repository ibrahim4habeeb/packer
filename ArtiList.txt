===
import java.net.URL
import java.net.HttpURLConnection

// Jenkins credentials
def username = "your-username"  // Replace with your Jenkins username
def password = "your-password"  // Replace with your Jenkins password

// URL of the CSV file
def csvUrl = "https://jenkinsurl/path/to/csv"

// Fetch CSV content with authentication
def csvContent
try {
    def connection = new URL(csvUrl).openConnection() as HttpURLConnection
    // Add Basic Authentication header
    def basicAuth = "Basic " + "${username}:${password}".bytes.encodeBase64().toString()
    connection.setRequestProperty("Authorization", basicAuth)

    // Read the CSV content
    if (connection.responseCode == 200) {
        csvContent = connection.inputStream.text
    } else {
        return ["Error: ${connection.responseMessage} (${connection.responseCode})"]
    }
    connection.disconnect()
} catch (Exception e) {
    return ["Error fetching CSV: ${e.message}"]
}

// Parse the CSV content
def options = []
csvContent.eachLine { line ->
    def columns = line.split(",") // Assuming a comma-delimited CSV
    if (columns.size() > 0) {
        options << columns[0] // Add the first column value to options
    }
}

// Return the list of options for the dropdown
return options
====
import groovy.json.JsonOutput
import java.net.URL

// URL of the CSV file
def csvUrl = "https://jenkinsurl/path/to/csv"

// Fetch the CSV content
def csvContent
try {
    csvContent = new URL(csvUrl).text
} catch (Exception e) {
    return ["Error fetching CSV: ${e.message}"]
}

// Parse the CSV content
def options = []
csvContent.eachLine { line ->
    def columns = line.split(",") // Assuming a comma-delimited CSV
    if (columns.size() > 0) {
        options << columns[0] // Add the first column value to options
    }
}

// Return the list of options for the dropdown
return options
====
pipeline {
    agent any
    stages {
        stage('Download CSV') {
            steps {
                script {
                    // Define the URL of the CSV file
                    def csvUrl = "https://jenkins-url/job/testjob/artifact/test.csv"
                    
                    // Define the workspace file path
                    def csvFile = "${env.WORKSPACE}/test.csv"
                    
                    // Download the CSV file
                    sh """
                        curl -o ${csvFile} ${csvUrl}
                    """
                }
            }
        }
        stage('Extract First Column') {
            steps {
                script {
                    // Extract the first column from the CSV file
                    sh """
                        awk -F',' '{print \$1}' ${env.WORKSPACE}/test.csv > ${env.WORKSPACE}/first_column.txt
                    """
                    
                    // Print the extracted column
                    sh "cat ${env.WORKSPACE}/first_column.txt"
                }
            }
        }
    }
    post {
        always {
            // Cleanup workspace
            cleanWs()
        }
    }
}

