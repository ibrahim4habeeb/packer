#!/bin/bash

# Input JSON as a string
TAGS='{
  "abc2": "abc1",
  "abc3": "abc4"
}'

# Convert JSON to "key"="value" format
FORMATTED_TAGS=$(echo "$TAGS" | jq -r 'to_entries | map("\"" + .key + "\"=\"" + .value + "\"") | join(" ")')

# Output the formatted tags
echo "$FORMATTED_TAGS"
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh """
                    #!/bin/bash
                    TAGS='{
                    "abc2": "abc1",
                    "abc3": "abc4"
                    }'

                    # Remove braces and format into key=value pairs
                    FORMATTED_TAGS=$(echo "$TAGS" | tr -d '{}' | sed 's/,//g' | awk -F':' '{gsub(/"/, "", $1); gsub(/"/, "", $2); print "\"" $1 "\"=\"" $2 "\""}' | tr '\\n' ' ')
                    
                    echo "Formatted Tags: \$FORMATTED_TAGS"
                    """
                }
            }
        }
    }
}
no such property TAGS
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh """
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=\$(az disk show --name ${diskName} --resource-group ${params.SOURCE_RG} --query "tags" -o json)

                    # Convert JSON to "key"="value" format using jq
                    FORMATTED_TAGS=\$(echo "\$TAGS" | jq -r 'to_entries | map("\\""+.key+"\\"=\\""+.value+"\\"") | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: \$FORMATTED_TAGS"
                    """
                }
            }
        }
    }
}
correct tags
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh """
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=\$(az disk show --name ${diskName} --resource-group ${params.SOURCE_RG} --query "tags" -o json)

                    # Convert JSON to the desired format
                    FORMATTED_TAGS=\$(echo "\$TAGS" | jq -r 'to_entries | map(.key + "=" + (.value | gsub("\\\\""; "";"))) | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: \$FORMATTED_TAGS"
                    """
                }
            }
        }
    }
}

jq gsub function error with jq
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh """
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=\$(az disk show --name ${diskName} --resource-group ${params.SOURCE_RG} --query "tags" -o json)

                    # Convert JSON to the desired format (key=value)
                    FORMATTED_TAGS=\$(echo "\$TAGS" | jq -r 'to_entries | map(.key + "=" + (.value | gsub("\\\\""; ""))) | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: \$FORMATTED_TAGS"
                    """
                }
            }
        }
    }
}

escape character issue in jq
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh """
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=\$(az disk show --name ${diskName} --resource-group ${params.SOURCE_RG} --query "tags" -o json)

                    # Convert JSON to the desired format (key=value)
                    FORMATTED_TAGS=\$(echo "\$TAGS" | jq -r 'to_entries | map(.key + "=" + .value | gsub("\\\\""; "")) | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: \$FORMATTED_TAGS"
                    """
                }
            }
        }
    }
}
solving the issue coming again and again
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh '''
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=$(az disk show --name "${diskName}" --resource-group "${params.SOURCE_RG}" --query "tags" -o json)

                    # Validate if tags are fetched properly
                    if [ -z "$TAGS" ] || [ "$TAGS" == "null" ]; then
                        echo "No tags found."
                        exit 0
                    fi

                    # Convert JSON to key=value format
                    FORMATTED_TAGS=$(echo "$TAGS" | jq -r 'to_entries | map(.key + "=" + (.value | tostring | gsub("\\""; ""))) | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: $FORMATTED_TAGS"
                    '''
                }
            }
        }
    }
}

what evere between double quotes 
response 1
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh '''
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=$(az disk show --name "${diskName}" --resource-group "${params.SOURCE_RG}" --query "tags" -o json)

                    # Check if the tags are empty or null
                    if [ -z "$TAGS" ] || [ "$TAGS" == "null" ]; then
                        echo "No tags found."
                        exit 0
                    fi

                    # Convert JSON to key=value format
                    FORMATTED_TAGS=$(echo "$TAGS" | jq -r 'to_entries | map("\"" + .key + "\"=\"" + .value + "\"") | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: $FORMATTED_TAGS"
                    '''
                }
            }
        }
    }
}
response 2
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh '''
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=$(az disk show --name "${diskName}" --resource-group "${params.SOURCE_RG}" --query "tags" -o json)

                    # Validate if tags are fetched properly
                    if [ -z "$TAGS" ] || [ "$TAGS" == "null" ]; then
                        echo "No tags found."
                        exit 0
                    fi

                    # Convert JSON to key=value format
                    FORMATTED_TAGS=$(echo "$TAGS" | jq -r 'to_entries | map(.key + "=" + (.value | tostring)) | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: $FORMATTED_TAGS"
                    '''
                }
            }
        }
    }
}
=========₹₹₹₹₹₹₹₹₹=======$$$$¥¥¥£££€€

pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh '''
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=$(az disk show --name "${diskName}" --resource-group "${params.SOURCE_RG}" --query "tags" -o json)

                    # Check if the tags are empty or null
                    if [ -z "$TAGS" ] || [ "$TAGS" == "null" ]; then
                        echo "No tags found."
                        exit 0
                    fi

                    # Convert JSON to key=value format, handling special characters
                    FORMATTED_TAGS=$(echo "$TAGS" | jq -r 'to_entries | map(.key + "=" + (.value | tostring | @sh)) | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: $FORMATTED_TAGS"
                    '''
                }
            }
        }
    }
}
(Dev-Ops)
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh '''
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=$(az disk show --name "${diskName}" --resource-group "${params.SOURCE_RG}" --query "tags" -o json)

                    # Check if the tags are empty or null
                    if [ -z "$TAGS" ] || [ "$TAGS" == "null" ]; then
                        echo "No tags found."
                        exit 0
                    fi

                    # Convert JSON to key=value format, preserving special characters
                    FORMATTED_TAGS=$(echo "$TAGS" | jq -r 'to_entries | map(.key + "=" + (.value | tostring)) | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: $FORMATTED_TAGS"
                    '''
                }
            }
        }
    }
}
2 dev-ops
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh '''
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=$(az disk show --name "${diskName}" --resource-group "${params.SOURCE_RG}" --query "tags" -o json)

                    # Check if the tags are empty or null
                    if [ -z "$TAGS" ] || [ "$TAGS" == "null" ]; then
                        echo "No tags found."
                        exit 0
                    fi

                    # Convert JSON to key=value format, preserving parentheses and spaces
                    FORMATTED_TAGS=$(echo "$TAGS" | jq -r 'to_entries | map(.key + "=" + "\"" + .value + "\"") | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: $FORMATTED_TAGS"
                    '''
                }
            }
        }
    }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
pipeline {
    agent any
    stages {
        stage('Format Tags') {
            steps {
                script {
                    sh '''
                    #!/bin/bash

                    # Fetch tags from Azure using az CLI
                    TAGS=$(az disk show --name "${diskName}" --resource-group "${params.SOURCE_RG}" --query "tags" -o json)

                    # Check if the tags are empty or null
                    if [ -z "$TAGS" ] || [ "$TAGS" == "null" ]; then
                        echo "No tags found."
                        exit 0
                    fi

                    # Convert JSON to key=value format, preserving special characters in values
                    FORMATTED_TAGS=$(echo "$TAGS" | jq -r 'to_entries | map(.key + "=" + (.value | gsub(" "; "\\ ") | gsub("\"; "(") | gsub("\"; ")")) | join(" ")')

                    # Output the formatted tags
                    echo "Formatted Tags: $FORMATTED_TAGS"
                    '''
                }
            }
        }
    }
}
