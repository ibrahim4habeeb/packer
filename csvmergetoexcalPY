import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv"
]

# Create a new Excel writer object
output_excel_file = "merged_excel.xlsx"
with pd.ExcelWriter(output_excel_file, engine="xlsxwriter") as writer:
    for i, csv_file in enumerate(csv_files):
        if os.path.exists(csv_file):
            # Read the CSV file
            df = pd.read_csv(csv_file)
            # Write to a new sheet in the Excel file
            df.to_excel(writer, sheet_name=f"Sheet{i + 1}", index=False)
        else:
            print(f"File not found: {csv_file}")

print(f"All CSV files have been merged into '{output_excel_file}' successfully.")


####â‚¹
import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv"
]

# Create an empty dataframe to hold all the data
merged_data = pd.DataFrame()

# Loop through each CSV file and append it to the dataframe
for csv_file in csv_files:
    if os.path.exists(csv_file):
        df = pd.read_csv(csv_file)
        merged_data = pd.concat([merged_data, df], ignore_index=True)
    else:
        print(f"File not found: {csv_file}")

# Save the merged data to an Excel file
output_excel_file = "merged_excel.xlsx"
merged_data.to_excel(output_excel_file, index=False)

print(f"All CSV files have been merged into '{output_excel_file}' successfully in a single sheet.")

######
import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv",
    "file9.csv"
]

# Start Jenkins names from 500
jenkins_names = [str(i) for i in range(500, 509)]

# Create an empty dataframe to hold all the data
merged_data = pd.DataFrame()

# Loop through each Jenkins name and its corresponding CSV file
for jenkins_name, csv_file in zip(jenkins_names, csv_files):
    if os.path.exists(csv_file):
        # Add a row with Jenkins name
        jenkins_row = pd.DataFrame([[jenkins_name]], columns=["Jenkins Name"])
        # Read the CSV file while preserving "N/A" as a string
        df = pd.read_csv(csv_file, keep_default_na=False)
        # Concatenate Jenkins row and its respective CSV data
        merged_data = pd.concat([merged_data, jenkins_row, df], ignore_index=True)
    else:
        print(f"File not found: {csv_file}")

# Save the merged data to an Excel file
output_excel_file = "merged_excel_with_jenkins.xlsx"
merged_data.to_excel(output_excel_file, index=False)

print(f"All CSV files have been merged into '{output_excel_file}' with Jenkins names.")
########
import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv",
    "file9.csv"
]

# Jenkins names from jksm500 to jksm509
jenkins_names = [f"jksm{i}" for i in range(500, 509)]

# Create an empty dataframe to hold all the data
merged_data = pd.DataFrame()

# Loop through each Jenkins name and its corresponding CSV file
for jenkins_name, csv_file in zip(jenkins_names, csv_files):
    if os.path.exists(csv_file):
        # Read the CSV file while preserving "N/A" as a string
        df = pd.read_csv(csv_file, keep_default_na=False)
        # Add the Jenkins name row
        jenkins_row = pd.DataFrame([[jenkins_name]], columns=df.columns)
        # Add a new column for the index to retain the respective index
        df.reset_index(inplace=True)
        # Concatenate Jenkins row and its respective CSV data
        merged_data = pd.concat([merged_data, jenkins_row, df], ignore_index=True)
    else:
        print(f"File not found: {csv_file}")

# Save the merged data to an Excel file
output_excel_file = "merged_excel_with_indexes_and_jenkins.xlsx"
merged_data.to_excel(output_excel_file, index=False)

print(f"All CSV files have been merged into '{output_excel_file}' with Jenkins names and respective indexes.")
#####
import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv",
    "file9.csv"
]

# Jenkins names from jksm500 to jksm509
jenkins_names = [f"jksm{i}" for i in range(500, 509)]

# Create an empty DataFrame to hold all the data
merged_data = pd.DataFrame()

# Loop through each Jenkins name and its corresponding CSV file
for jenkins_name, csv_file in zip(jenkins_names, csv_files):
    if os.path.exists(csv_file):
        # Read the CSV file while preserving "N/A" as a string
        df = pd.read_csv(csv_file, keep_default_na=False)
        
        # Add the Jenkins name as a new row
        jenkins_row = pd.DataFrame([[jenkins_name]], columns=df.columns)
        merged_data = pd.concat([merged_data, jenkins_row], ignore_index=True)
        
        # Add the index as a new row
        index_row = pd.DataFrame([df.index.tolist()], columns=df.columns[:len(df.index)])
        merged_data = pd.concat([merged_data, index_row], ignore_index=True)
        
        # Add the CSV data without its index
        merged_data = pd.concat([merged_data, df], ignore_index=True)
    else:
        print(f"File not found: {csv_file}")

# Save the merged data to an Excel file
output_excel_file = "merged_excel_with_jenkins_and_indexes.xlsx"
merged_data.to_excel(output_excel_file, index=False)

print(f"All CSV files have been merged into '{output_excel_file}' with Jenkins names and respective indexes.")
####
import pandas as pd

# List of CSV file names
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv",
]

# Excel file name to save
output_excel = "merged_excel.xlsx"

# Initialize an empty list to hold dataframes
merged_data = []

# Loop through each file and append dataframes with labels
for i, file in enumerate(csv_files):
    # Add a row with the custom label
    label_row = pd.DataFrame([[f"jksm500{i}"]], columns=["Label"])
    
    # Read the CSV file, preserving 'N/A'
    df = pd.read_csv(file, keep_default_na=False, na_values=["N/A"])

    # Add label row and dataframe to the merged data
    merged_data.append(label_row)
    merged_data.append(df)

# Concatenate all dataframes
final_data = pd.concat(merged_data, ignore_index=True)

# Write to Excel
final_data.to_excel(output_excel, index=False, header=False)

print(f"Merged Excel file has been saved as '{output_excel}'")
########
import pandas as pd

# List of CSV file names
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv",
]

# Excel file name to save
output_excel = "merged_excel.xlsx"

# Initialize a list to hold dataframes for merging
merged_data = []

# Loop through each file and process
for i, file in enumerate(csv_files):
    # Add a row with the custom name
    custom_row = pd.DataFrame([[f"jksm500{i}"]])
    
    # Read the CSV file, preserving 'N/A'
    df = pd.read_csv(file, keep_default_na=False, na_values=["N/A"])
####
import pandas as pd
from openpyxl import Workbook
from openpyxl.styles import Font, Alignment

# List of CSV file names
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv",
]

# Excel file name to save
output_excel = "merged_excel.xlsx"

# Create a new workbook
wb = Workbook()
ws = wb.active

# Initialize starting row
current_row = 1

# Loop through each file and process
for i, file in enumerate(csv_files):
    # Add a row with the custom name (e.g., jksm500) merged across 3 cells and bold
    ws.merge_cells(start_row=current_row, start_column=1, end_row=current_row, end_column=3)
    cell = ws.cell(row=current_row, column=1)
    cell.value = f"jksm500{i}"
    cell.font = Font(bold=True)
    cell.alignment = Alignment(horizontal="center")
    current_row += 1

    # Read the CSV file, preserving 'N/A'
    df = pd.read_csv(file, keep_default_na=False, na_values=["N/A"])

    # Add the CSV index (column headers) in bold
    for col_index, column_name in enumerate(df.columns, start=1):
        cell = ws.cell(row=current_row, column=col_index)
        cell.value = column_name
        cell.font = Font(bold=True)
    current_row += 1

    # Add the CSV data below the index
    for _, row in df.iterrows():
        for col_index, value in enumerate(row, start=1):
            ws.cell(row=current_row, column=col_index, value=value)
        current_row += 1

# Save the workbook
wb.save(output_excel)

print(f"Merged Excel file has been saved as '{output_excel}'")

    # Add the custom row, index row, and CSV data to the merged data
    merged_data.append(custom_row)
    merged_data.append(pd.DataFrame([df.columns.tolist()]))  # Add index row (column headers)
    merged_data.append(df)

# Concatenate all dataframes
final_data = pd.concat(merged_data, ignore_index=True)

# Write to Excel
final_data.to_excel(output_excel, index=False, header=False)

print(f"Merged Excel file has been saved as '{output_excel}'")
