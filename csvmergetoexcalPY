import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv"
]

# Create a new Excel writer object
output_excel_file = "merged_excel.xlsx"
with pd.ExcelWriter(output_excel_file, engine="xlsxwriter") as writer:
    for i, csv_file in enumerate(csv_files):
        if os.path.exists(csv_file):
            # Read the CSV file
            df = pd.read_csv(csv_file)
            # Write to a new sheet in the Excel file
            df.to_excel(writer, sheet_name=f"Sheet{i + 1}", index=False)
        else:
            print(f"File not found: {csv_file}")

print(f"All CSV files have been merged into '{output_excel_file}' successfully.")


####â‚¹
import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv"
]

# Create an empty dataframe to hold all the data
merged_data = pd.DataFrame()

# Loop through each CSV file and append it to the dataframe
for csv_file in csv_files:
    if os.path.exists(csv_file):
        df = pd.read_csv(csv_file)
        merged_data = pd.concat([merged_data, df], ignore_index=True)
    else:
        print(f"File not found: {csv_file}")

# Save the merged data to an Excel file
output_excel_file = "merged_excel.xlsx"
merged_data.to_excel(output_excel_file, index=False)

print(f"All CSV files have been merged into '{output_excel_file}' successfully in a single sheet.")

######
import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv",
    "file9.csv"
]

# Start Jenkins names from 500
jenkins_names = [str(i) for i in range(500, 509)]

# Create an empty dataframe to hold all the data
merged_data = pd.DataFrame()

# Loop through each Jenkins name and its corresponding CSV file
for jenkins_name, csv_file in zip(jenkins_names, csv_files):
    if os.path.exists(csv_file):
        # Add a row with Jenkins name
        jenkins_row = pd.DataFrame([[jenkins_name]], columns=["Jenkins Name"])
        # Read the CSV file while preserving "N/A" as a string
        df = pd.read_csv(csv_file, keep_default_na=False)
        # Concatenate Jenkins row and its respective CSV data
        merged_data = pd.concat([merged_data, jenkins_row, df], ignore_index=True)
    else:
        print(f"File not found: {csv_file}")

# Save the merged data to an Excel file
output_excel_file = "merged_excel_with_jenkins.xlsx"
merged_data.to_excel(output_excel_file, index=False)

print(f"All CSV files have been merged into '{output_excel_file}' with Jenkins names.")
########
import pandas as pd
import os

# List of CSV file paths
csv_files = [
    "file1.csv",
    "file2.csv",
    "file3.csv",
    "file4.csv",
    "file5.csv",
    "file6.csv",
    "file7.csv",
    "file8.csv",
    "file9.csv"
]

# Jenkins names from jksm500 to jksm509
jenkins_names = [f"jksm{i}" for i in range(500, 509)]

# Create an empty dataframe to hold all the data
merged_data = pd.DataFrame()

# Loop through each Jenkins name and its corresponding CSV file
for jenkins_name, csv_file in zip(jenkins_names, csv_files):
    if os.path.exists(csv_file):
        # Read the CSV file while preserving "N/A" as a string
        df = pd.read_csv(csv_file, keep_default_na=False)
        # Add the Jenkins name row
        jenkins_row = pd.DataFrame([[jenkins_name]], columns=df.columns)
        # Add a new column for the index to retain the respective index
        df.reset_index(inplace=True)
        # Concatenate Jenkins row and its respective CSV data
        merged_data = pd.concat([merged_data, jenkins_row, df], ignore_index=True)
    else:
        print(f"File not found: {csv_file}")

# Save the merged data to an Excel file
output_excel_file = "merged_excel_with_indexes_and_jenkins.xlsx"
merged_data.to_excel(output_excel_file, index=False)

print(f"All CSV files have been merged into '{output_excel_file}' with Jenkins names and respective indexes.")
