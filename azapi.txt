resource "azapi_resource" "quota_alert" {
  type      = "Microsoft.AlertsManagement/scheduledQueryRules@2021-08-01"
  name      = "QuotaAlert"
  location  = azurerm_resource_group.example.location
  parent_id = azurerm_resource_group.example.id

  body = jsonencode({
    properties = {
      description = "Alert when Azure quota usage exceeds thresholds."
      enabled     = true
      severity    = 2
      source = {
        query         = "AzureQuota_CL | where Total_Used_d >= Threshold_d"
        dataSourceId  = azurerm_log_analytics_workspace.example.id
        queryType     = "ResultCount"
      }
      schedule = {
        frequencyInMinutes   = 15
        timeWindowInMinutes  = 60
      }
      criteria = {
        allOf = [
          {
            threshold        = 60
            operator         = "GreaterThanOrEqual"
            timeAggregation  = "Total"
            metricMeasureType = "Count"
            severity         = 2  # Severity level 2 for 60% threshold
          },
          {
            threshold        = 70
            operator         = "GreaterThanOrEqual"
            timeAggregation  = "Total"
            metricMeasureType = "Count"
            severity         = 1  # Severity level 1 for 70% threshold
          },
          {
            threshold        = 80
            operator         = "GreaterThanOrEqual"
            timeAggregation  = "Total"
            metricMeasureType = "Count"
            severity         = 0  # Severity level 0 for 80% threshold
          }
        ]
      }
      actions = {
        actionGroups = [
          azurerm_monitor_action_group.example.id
        ]
      }
    }
  })
}
â‰ˆ====
variable "thresholds" {
  type    = list(number)
  default = [60, 70, 80]
}

variable "severities" {
  type    = list(number)
  default = [2, 1, 0]
}
======
resource "azapi_resource" "quota_alert" {
  type      = "Microsoft.AlertsManagement/scheduledQueryRules@2021-08-01"
  name      = "QuotaAlert"
  location  = azurerm_resource_group.example.location
  parent_id = azurerm_resource_group.example.id

  body = jsonencode({
    properties = {
      description = "Alert when Azure quota usage exceeds thresholds."
      enabled     = true
      source = {
        query         = "AzureQuota_CL | where Total_Used_d >= Threshold_d"
        dataSourceId  = azurerm_log_analytics_workspace.example.id
        queryType     = "ResultCount"
      }
      schedule = {
        frequencyInMinutes   = 15
        timeWindowInMinutes  = 60
      }
      criteria = {
        allOf = [
          # Dynamic block to loop over thresholds and severities
          for i in range(length(var.thresholds)) : {
            threshold        = var.thresholds[i]
            operator         = "GreaterThanOrEqual"
            timeAggregation  = "Total"
            metricMeasureType = "Count"
            severity         = var.severities[i]
          }
        ]
      }
      actions = {
        actionGroups = [
          azurerm_monitor_action_group.example.id
        ]
      }
    }
  })
}
========
variable "severity_threshold_map" {
  type = map(number)
  default = {
    2 = 80  # Severity 2 with Threshold 80
    1 = 70  # Severity 1 with Threshold 70
    0 = 60  # Severity 0 with Threshold 60
  }
}

resource "azurerm_monitor_metric_alert" "example" {
  for_each            = var.severity_threshold_map
  name                = "example-metricalert-${each.key}"
  resource_group_name = "example-resources"
  scopes              = [azurerm_virtual_machine.example.id]
  criteria {
    aggregation = "Total"
    metric_name = "Percentage CPU"
    operator    = "GreaterThan"
    threshold   = each.value  # Use the threshold value from the map
  }

  properties = jsonencode({
    severity = each.key  # Use the severity value from the map
  })
}
